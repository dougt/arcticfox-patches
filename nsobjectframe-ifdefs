# HG changeset patch
# User Ted Mielczarek <ted.mielczarek@gmail.com>
# Date 1273521097 14400
# Node ID d4fedbff3307d2f3055311f5fb83bf8ffaf8c98f
# Parent  dc88c646b0809c7f5fded14bdd3d6e0289dc7b25
imported patch nsobjectframe-ifdefs

diff --git a/layout/generic/nsObjectFrame.cpp b/layout/generic/nsObjectFrame.cpp
--- a/layout/generic/nsObjectFrame.cpp
+++ b/layout/generic/nsObjectFrame.cpp
@@ -182,8 +182,10 @@
 #ifdef XP_MACOSX
 #include "gfxQuartzNativeDrawing.h"
 #include "nsPluginUtilsOSX.h"
+#ifdef MOZ_WIDGET_COCOA
 #include "nsCoreAnimationSupport.h"
 #endif
+#endif
 
 #ifdef MOZ_X11
 #if (MOZ_PLATFORM_MAEMO == 5) && defined(MOZ_WIDGET_GTK2)
@@ -496,7 +498,9 @@
 #endif
   PRInt32                                   mInCGPaintLevel;
   nsIOSurface                              *mIOSurface;
+#ifdef MOZ_WIDGET_COCOA
   nsCARenderer                              mCARenderer;
+#endif
   static nsCOMPtr<nsITimer>                *sCATimer;
   static nsTArray<nsPluginInstanceOwner*>  *sCARefreshListeners;
   PRBool                                    mSentInitialTopLevelWindowEvent;
@@ -825,10 +829,12 @@
     pluginWidget->SetPluginEventModel(mInstanceOwner->GetEventModel());
     pluginWidget->SetPluginDrawingModel(mInstanceOwner->GetDrawingModel());
 
+#ifdef MOZ_WIDGET_COCOA
     if (mInstanceOwner->GetDrawingModel() == NPDrawingModelCoreAnimation) {
       mInstanceOwner->SetupCARefresh();
     }
 #endif
+#endif
   }
 
   if (!IsHidden()) {
@@ -1868,12 +1874,15 @@
 #endif
 
       mInstanceOwner->BeginCGPaint();
+#ifdef MOZ_WIDGET_COCOA
       if (mInstanceOwner->GetDrawingModel() == NPDrawingModelCoreAnimation ||
           mInstanceOwner->GetDrawingModel() == 
                                    NPDrawingModelInvalidatingCoreAnimation) {
         // CoreAnimation is updated, render the layer and perform a readback.
         mInstanceOwner->RenderCoreAnimation(cgContext, window->width, window->height);
-      } else {
+      } else
+#endif
+        {
         mInstanceOwner->Paint(nativeClipRect - offset, cgContext);
       }
       mInstanceOwner->EndCGPaint();
@@ -3269,7 +3278,7 @@
   if (!menu || !event)
     return NPERR_GENERIC_ERROR;
 
-#ifdef XP_MACOSX
+#ifdef MOZ_WIDGET_COCOA
   if (GetEventModel() != NPEventModelCocoa)
     return NPERR_INCOMPATIBLE_VERSION_ERROR;
 
@@ -3283,7 +3292,7 @@
 NPBool nsPluginInstanceOwner::ConvertPoint(double sourceX, double sourceY, NPCoordinateSpace sourceSpace,
                                            double *destX, double *destY, NPCoordinateSpace destSpace)
 {
-#ifdef XP_MACOSX
+#ifdef MOZ_WIDGET_COCOA
   if (!mWidget)
     return PR_FALSE;
 
@@ -3861,6 +3870,7 @@
 nsCOMPtr<nsITimer>                *nsPluginInstanceOwner::sCATimer = NULL;
 nsTArray<nsPluginInstanceOwner*>  *nsPluginInstanceOwner::sCARefreshListeners = NULL;
 
+#ifdef MOZ_WIDGET_COCOA
 void nsPluginInstanceOwner::CARefresh(nsITimer *aTimer, void *aClosure) {
   if (!sCARefreshListeners) {
     return;
@@ -3994,6 +4004,7 @@
     NS_NOTREACHED("nsCARenderer::Render failure");
   }
 }
+#endif
 
 void* nsPluginInstanceOwner::GetPluginPortCopy()
 {
@@ -5301,7 +5312,7 @@
   // stop the timer explicitly to reduce reference count.
   CancelTimer();
 #endif
-#ifdef XP_MACOSX
+#ifdef MOZ_WIDGET_COCOA
   RemoveFromCARefreshTimer(this);
   if (mIOSurface)
     delete mIOSurface;
@@ -6354,9 +6365,11 @@
       NS_NPAPI_CarbonWindowFrame(static_cast<WindowRef>(static_cast<NP_CGContext*>(pluginPort)->window), windowRect);
     else
 #endif
+#ifdef MOZ_WIDGET_COCOA
     {
       NS_NPAPI_CocoaWindowFrame(cocoaTopLevelWindow, windowRect);
     }
+#endif
 
     mPluginWindow->x = geckoScreenCoords.x - windowRect.x;
     mPluginWindow->y = geckoScreenCoords.y - windowRect.y;
@@ -6403,6 +6416,7 @@
     mPluginPortChanged = PR_FALSE;
   }
 
+#ifdef MOZ_WIDGET_COCOA
   // After the first NPP_SetWindow call we need to send an initial
   // top-level window focus event.
   if (eventModel == NPEventModelCocoa && !mSentInitialTopLevelWindowEvent) {
@@ -6417,6 +6431,7 @@
     pluginEvent.pluginEvent = &cocoaEvent;
     ProcessEvent(pluginEvent);
   }
+#endif
 
 #ifndef NP_NO_QUICKDRAW
   if (drawingModel == NPDrawingModelQuickDraw)
