# HG changeset patch
# User Ted Mielczarek <ted.mielczarek@gmail.com>
# Date 1288962719 14400
# Node ID 0de7f026d5026491d76f7a9491c792021e58e10f
# Parent  851c47af2040ea541ffd46667aaa66409718310c
imported patch xpconnect-assertions

diff --git a/js/src/xpconnect/src/nsXPConnect.cpp b/js/src/xpconnect/src/nsXPConnect.cpp
--- a/js/src/xpconnect/src/nsXPConnect.cpp
+++ b/js/src/xpconnect/src/nsXPConnect.cpp
@@ -982,11 +982,8 @@
 /***************************************************************************/
 // nsIXPConnect interface methods...
 
-inline nsresult UnexpectedFailure(nsresult rv)
-{
-    NS_ERROR("This is not supposed to fail!");
-    return rv;
-}
+#define UnexpectedFailure(rv) \
+    ( NS_ERROR("This is not supposed to fail!") , rv)
 
 class SaveFrame
 {
diff --git a/js/src/xpconnect/src/xpccomponents.cpp b/js/src/xpconnect/src/xpccomponents.cpp
--- a/js/src/xpconnect/src/xpccomponents.cpp
+++ b/js/src/xpconnect/src/xpccomponents.cpp
@@ -4201,25 +4201,26 @@
 
     AutoMarkingNativeInterfacePtr iface(ccx);
     iface = XPCNativeInterface::GetNewOrUsed(ccx, &NS_GET_IID(nsIXPCComponents));
-
-    if(!iface)
-        return JS_FALSE;
+    NS_ENSURE_TRUE(iface, JS_FALSE);
 
     nsCOMPtr<XPCWrappedNative> wrapper;
     XPCWrappedNative::GetNewOrUsed(ccx, cholder, aScope, iface, nsnull,
                                    OBJ_IS_NOT_GLOBAL, getter_AddRefs(wrapper));
-    if(!wrapper)
-        return JS_FALSE;
+    NS_ENSURE_TRUE(wrapper, JS_FALSE);
 
     aScope->SetComponents(components);
 
     jsid id = ccx.GetRuntime()->GetStringID(XPCJSRuntime::IDX_COMPONENTS);
     JSObject* obj;
-
-    return NS_SUCCEEDED(wrapper->GetJSObject(&obj)) &&
-           obj && JS_DefinePropertyById(ccx, aGlobal, id, OBJECT_TO_JSVAL(obj),
-                                        nsnull, nsnull,
-                                        JSPROP_PERMANENT | JSPROP_READONLY);
+    nsresult rv = NS_SUCCEEDED(wrapper->GetJSObject(&obj));
+    NS_ENSURE_SUCCESS(rv, JS_FALSE);
+    NS_ENSURE_TRUE(obj, JS_FALSE);
+
+    NS_ENSURE_TRUE(JS_DefinePropertyById(ccx, aGlobal, id, OBJECT_TO_JSVAL(obj),
+                                         nsnull, nsnull,
+                                         JSPROP_PERMANENT | JSPROP_READONLY),
+                   JS_FALSE);
+    return JS_TRUE;
 }
 
 /* void lookupMethod (); */
diff --git a/js/src/xpconnect/src/xpcwrappednativeinfo.cpp b/js/src/xpconnect/src/xpcwrappednativeinfo.cpp
--- a/js/src/xpconnect/src/xpcwrappednativeinfo.cpp
+++ b/js/src/xpconnect/src/xpcwrappednativeinfo.cpp
@@ -246,8 +246,7 @@
     XPCJSRuntime* rt = ccx.GetRuntime();
 
     IID2NativeInterfaceMap* map = rt->GetIID2NativeInterfaceMap();
-    if(!map)
-        return nsnull;
+    NS_ENSURE_TRUE(map, nsnull);
 
     {   // scoped lock
         XPCAutoLock lock(rt->GetMapLock());
@@ -259,12 +258,10 @@
 
     nsCOMPtr<nsIInterfaceInfo> info;
     ccx.GetXPConnect()->GetInfoForIID(iid, getter_AddRefs(info));
-    if(!info)
-        return nsnull;
+    NS_ENSURE_TRUE(info, nsnull);
 
     iface = NewInstance(ccx, info);
-    if(!iface)
-        return nsnull;
+    NS_ENSURE_TRUE(iface, nsnull);
 
     {   // scoped lock
         XPCAutoLock lock(rt->GetMapLock());
