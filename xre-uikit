# HG changeset patch
# User Ted Mielczarek <ted.mielczarek@gmail.com>
# Date 1272373066 14400
# Node ID 9b6423c3780849d237a11e18a80bbeeb35c4c637
# Parent  a3cba549ca6d77328f8ef699eb6adf982362e6d3
imported patch xre-uikit

diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -168,8 +168,11 @@
 #include "nsThreadUtils.h"
 #endif
 
+#ifdef MOZ_WIDGET_COCOA
+#include "nsILocalFileMac.h"
+#endif
+
 #ifdef XP_MACOSX
-#include "nsILocalFileMac.h"
 #include "nsCommandLineServiceMac.h"
 #endif
 
@@ -191,10 +194,14 @@
 #include <malloc.h>
 #endif
 
-#if defined (XP_MACOSX)
+#if defined (MOZ_WIDGET_COCOA)
 #include <Carbon/Carbon.h>
 #endif
 
+#if defined (MOZ_WIDGET_UIKIT)
+#include <CoreFoundation/CoreFoundation.h>
+#endif
+
 #ifdef DEBUG
 #include "prlog.h"
 #endif
@@ -1497,11 +1504,6 @@
     return NS_NewNativeLocalFile(nsDependentCString(gBinaryPath), PR_FALSE,
                                  aResult);
 
-  NS_NewNativeLocalFile(EmptyCString(), PR_TRUE, getter_AddRefs(lf));
-  nsCOMPtr<nsILocalFileMac> lfm (do_QueryInterface(lf));
-  if (!lfm)
-    return NS_ERROR_FAILURE;
-
   // Works even if we're not bundled.
   CFBundleRef appBundle = CFBundleGetMainBundle();
   if (!appBundle)
@@ -1511,6 +1513,14 @@
   if (!bundleURL)
     return NS_ERROR_FAILURE;
 
+#ifdef MOZ_WIDGET_COCOA
+  NS_NewNativeLocalFile(EmptyCString(), PR_TRUE, getter_AddRefs(lf));
+  nsCOMPtr<nsILocalFileMac> lfm (do_QueryInterface(lf));
+  if (!lfm) {
+    CFRelease(bundleURL);
+    return NS_ERROR_FAILURE;
+  }
+
   FSRef fileRef;
   if (!CFURLGetFSRef(bundleURL, &fileRef)) {
     CFRelease(bundleURL);
@@ -1518,8 +1528,18 @@
   }
 
   rv = lfm->InitWithFSRef(&fileRef);
+#else // MOZ_WIDGET_UIKIT
+  char path[MAXPATHLEN * 4];
+  if (!CFURLGetFileSystemRepresentation(bundleURL, true, (UInt8*)path,
+                                        sizeof(path))) {
+    CFRelease(bundleURL);
+    return NS_ERROR_FAILURE;
+  }
+
+  rv = NS_NewNativeLocalFile(nsDependentCString(path), PR_TRUE,
+                             getter_AddRefs(lf));
+#endif
   CFRelease(bundleURL);
-
   if (NS_FAILED(rv))
     return rv;
 
@@ -2963,7 +2983,7 @@
   }
 #endif
 
-#ifdef XP_MACOSX
+#ifdef MOZ_WIDGET_COCOA
   if (PR_GetEnv("MOZ_LAUNCHED_CHILD")) {
     // This is needed, on relaunch, to force the OS to use the "Cocoa Dock
     // API".  Otherwise the call to ReceiveNextEvent() below will make it
@@ -3027,7 +3047,7 @@
     gSafeMode = PR_TRUE;
   }
 
-#ifdef XP_MACOSX
+#ifdef MOZ_WIDGET_COCOA
   if (GetCurrentEventKeyModifiers() & optionKey)
     gSafeMode = PR_TRUE;
 #endif
diff --git a/toolkit/xre/nsXREDirProvider.cpp b/toolkit/xre/nsXREDirProvider.cpp
--- a/toolkit/xre/nsXREDirProvider.cpp
+++ b/toolkit/xre/nsXREDirProvider.cpp
@@ -76,7 +76,7 @@
 #define CSIDL_LOCAL_APPDATA             0x001C
 #endif
 #endif
-#ifdef XP_MACOSX
+#ifdef MOZ_WIDGET_COCOA
 #include "nsILocalFileMac.h"
 #endif
 #ifdef XP_BEOS
@@ -1086,7 +1086,7 @@
   nsresult rv;
   nsCOMPtr<nsILocalFile> localDir;
 
-#if defined(XP_MACOSX)
+#if defined(MOZ_WIDGET_COCOA)
   FSRef fsRef;
   OSType folderType;
   if (aLocal) {
@@ -1206,7 +1206,7 @@
 {
   nsresult rv;
   nsCOMPtr<nsILocalFile> localDir;
-#if defined(XP_MACOSX)
+#if defined(MOZ_WIDGET_COCOA)
   FSRef fsRef;
   OSErr err = ::FSFindFolder(kOnSystemDisk, kApplicationSupportFolderType, kCreateFolder, &fsRef);
   NS_ENSURE_FALSE(err, NS_ERROR_FAILURE);
